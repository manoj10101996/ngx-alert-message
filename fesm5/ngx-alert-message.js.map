{"version":3,"file":"ngx-alert-message.js","sources":["ng://ngx-alert-message/lib/ngx-alert-message.service.ts","ng://ngx-alert-message/lib/ngx-alert-message.component.ts","ng://ngx-alert-message/lib/alert/alert.component.ts","ng://ngx-alert-message/lib/just-alert/just-alert.component.ts","ng://ngx-alert-message/lib/ngx-alert-message.module.ts","ng://ngx-alert-message/public-api.ts","ng://ngx-alert-message/ngx-alert-message.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxAlertMessageService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-alert-message',\n  template: `\n    <p>\n      ngx-alert-message works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class NgxAlertMessageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'ngx-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.scss'],\n})\nexport class AlertComponent implements OnInit {\n  textColor: string;\n  constructor() {}\n  @Input() mode: any;\n  @Input() close: any;\n  @Input() bold: any;\n  @Input() text: any;\n  @Input() disabled: any;\n  ngOnInit(): void {\n    if (this.mode === 'success') {\n      this.mode = 'green';\n    } else if (this.mode === 'primary') {\n      this.mode = '#0d47a1';\n    } else if (this.mode === 'danger') {\n      this.mode = 'crimson';\n    } else if (this.mode === 'warning') {\n      this.mode = '#ff9800';\n    } else if (this.mode === 'info') {\n      this.mode = 'cornflowerblue';\n    } else {\n      this.mode = 'white';\n      this.textColor = 'black';\n      this.bold = 'true';\n    }\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'ngx-just-alert',\n  templateUrl: './just-alert.component.html',\n  styleUrls: ['./just-alert.component.scss'],\n})\nexport class JustAlertComponent implements OnInit {\n  textColor: string;\n  constructor() {}\n  @Input() mode: any;\n  @Input() close: any;\n  @Input() bold: any;\n  @Input() text: any;\n  @Input() disabled: any;\n  ngOnInit(): void {\n    if (this.mode === 'success') {\n      this.mode = 'green';\n    } else if (this.mode === 'primary') {\n      this.mode = '#0d47a1';\n    } else if (this.mode === 'danger') {\n      this.mode = 'crimson';\n    } else if (this.mode === 'warning') {\n      this.mode = '#ff9800';\n    } else if (this.mode === 'info') {\n      this.mode = 'cornflowerblue';\n    } else {\n      this.mode = 'white';\n      this.textColor = 'black';\n      this.bold = 'true';\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxAlertMessageComponent } from './ngx-alert-message.component';\nimport { AlertComponent } from './alert/alert.component';\nimport { JustAlertComponent } from './just-alert/just-alert.component';\n\n@NgModule({\n  declarations: [NgxAlertMessageComponent, AlertComponent, JustAlertComponent],\n  imports: [],\n  exports: [NgxAlertMessageComponent, AlertComponent, JustAlertComponent],\n})\nexport class NgxAlertMessageModule {}\n","/*\n * Public API Surface of ngx-alert-message\n */\n\nexport * from './lib/ngx-alert-message.service';\nexport * from './lib/ngx-alert-message.component';\nexport * from './lib/ngx-alert-message.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {AlertComponent as ɵa} from './lib/alert/alert.component';\nexport {JustAlertComponent as ɵb} from './lib/just-alert/just-alert.component';"],"names":[],"mappings":"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"}